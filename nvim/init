"vim:syntax=vim

set encoding=utf-8
set mouse=a

autocmd! BufWritePost * Neomake
runtime macros/matchit.vim

let g:neomake_javascript_enabled_makers = ['eslint']

" text display
set expandtab "convert tab to space
set nu " line numbers

" Always show the status line
set laststatus=2

" Show trailing white space
match Error '\s\+$'

" Delete trailing white space
nnoremap ,s :%s/\s\+$//e<CR>

" Allow copy to clipboard
set clipboard=unnamed

" duh
set nobackup
set noswapfile

" Search highlighting and incremental
set incsearch
set hlsearch

" identation
set smartindent
set tabstop=2
set shiftwidth=2
set expandtab

" Auto indentation for programming =)
set ai

colorscheme molokai
set background=dark
set t_Co=256
hi Search ctermbg=LightBlue
set showcmd
set autoindent
set foldenable
set ignorecase
set cursorline
set showmode
set number
set showmatch
syntax on


"If a file change it auto reloads
set autoread

" Indent if we're at the beginning of a line. Else, do completion.
function! InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
  endif
endfunction

inoremap <expr> <tab> InsertTabWrapper()
inoremap <s-tab> <c-n>

"Open files on the same dir
cnoremap <expr> %% expand('%:h').'/'
map <leader>e :edit %%
map <leader>v :view %%

vnoremap ,e :call ExtractVariable()<cr>

" Elm
let g:elm_jump_to_error = 0
let g:elm_make_output_file = "elm.js"
let g:elm_make_show_warnings = 0
let g:elm_syntastic_show_warnings = 0
let g:elm_browser_command = ""
let g:elm_detailed_complete = 0
let g:elm_format_autosave = 1
let g:elm_format_fail_silently = 0
let g:elm_setup_keybindings = 1

" ESLint
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exe = 'npm run lint --'

